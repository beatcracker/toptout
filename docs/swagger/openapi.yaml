openapi: 3.0.2
info:
  title: Toptout
  description: Get data about telemetry channels in various applications
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 0.0.1
servers:
  - url: https://toptout.me/api
    description: Implements static API using GitHub pages
tags:
  - name: apps
    description: Get application ids or categories
  - name: telemetry
    description: Get telemetry data by application id or category
paths:
  /id/:
    get:
      summary: Returns a list of all supported application ids
      operationId: getApplicationId
      tags:
        - apps
      responses:
        '200':
          description: A JSON array of all supported application ids
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /category/:
    get:
      summary: Returns a list of all supported application categories
      operationId: getCategoryId
      tags:
        - apps
      responses:
        '200':
          description: A JSON array of all supported application categories
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /telemetry/:
    get:
      summary: Returns telemetry details for all known application ids
      operationId: getTelemetry
      tags:
        - telemetry
      responses:
        '200':
          description: An array of JSON objects with telemetry channels data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Toptout'
  /telemetry/id/{id}/:
    get:
      summary: Returns telemetry details for specific application id
      operationId: getTelemetryById
      tags:
        - telemetry
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A JSON object with telemetry channels data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Toptout'
  /telemetry/category/{category}/:
    get:
      summary: Returns telemetry details for applications in specific category
      operationId: getTelemetryByCategory
      tags:
        - telemetry
      parameters:
        - in: path
          name: category
          required: true
          schema:
            type: string
      responses:
        '200':
          description: An array of JSON objects with telemetry channels data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Toptout'
components:
  schemas:
    Links:
      type: object
      description: Contains links to the main product page, telemetry and privacy policy.
      additionalProperties: false
      properties:
        main:
          type: string
          format: uri
          pattern: ^http[s]?:\/\/.+$
          description: Link to the product's website. Mandatory.
        telemetry:
          type: string
          format: uri
          pattern: ^http[s]?:\/\/.+$
          description: Link to the product's general telemetry description. Optional.
        privacy:
          type: string
          format: uri
          pattern: ^http[s]?:\/\/.+$
          description: Link to the product's privacy policy. Optional.
      required:
        - main
      title: Links
    Traits:
      type: object
      description: Describes telemetry channel traits
      additionalProperties: false
      properties:
        official:
          type: boolean
          description: Telemetry channel officially supports opt-in/opt-out.
        usage_data:
          type: boolean
          description: Telemetry channel provides usage data.
        update_check:
          type: boolean
          description: Telemetry channel provides update checks.
        error_report:
          type: boolean
          description: Telemetry channel provides error reports.
      required:
        - official
        - usage_data
        - update_check
        - error_report
      title: Traits
    Path:
      type: object
      description: >-
        Item path. For environment variables this would be name, for files -
        full path.
      additionalProperties: false
      properties:
        linux:
          type: string
          description: This path should be used on Linux.
        macos:
          type: string
          description: This path should be used on macOS.
        windows:
          type: string
          description: This path should be used on Windows.
        default:
          type: string
          description: if no OS-specific path is specified, this one should be used.
      anyOf:
        - required:
            - default
        - required:
            - linux
        - required:
            - macos
        - required:
            - windows
      title: Path
    StringValue:
      type: object
      description: Opt-in/out values for env/exec/plain_file/registry targets
      additionalProperties: false
      properties:
        opt_out:
          description: >-
            This value will opt-OUT of the telemetry collection. Use null to
            indicate that entry should be removed.
          oneOf:
            - type: string
            - type: 'null'
        opt_in:
          description: >-
            This value will opt-IN of the telemetry collection. Use null to
            indicate that value should be removed.
          oneOf:
            - type: string
            - type: 'null'
      required:
        - opt_in
        - opt_out
      title: StringValue
    ExecProperties:
      type: object
      description: Describes command name and arguments.
      additionalProperties: false
      properties:
        path:
          $ref: '#/components/schemas/Path'
        value:
          $ref: '#/components/schemas/StringValue'
      required:
        - path
        - value
      title: ExecProperties
    Exec:
      type: object
      description: '"Execute command". Run command with arguments.'
      additionalProperties: false
      properties:
        scope:
          type: object
          description: >-
            Target scope. You can use multiple scopes: machine (applies to all
            users of the computer), user (applies to current user of the
            computer), process (applies to current process only).
          additionalProperties: false
          properties:
            machine:
              $ref: '#/components/schemas/ExecProperties'
              description: Configures telemetry channel for all users of the computer.
            user:
              $ref: '#/components/schemas/ExecProperties'
              description: Configures telemetry channel for current user of the computer.
            process:
              $ref: '#/components/schemas/ExecProperties'
              description: Configures telemetry channel for process only.
          anyOf:
            - required:
                - machine
            - required:
                - process
            - required:
                - user
      required:
        - scope
      title: Exec
    EnvProperties:
      type: object
      description: Describe variable name and applicable values
      additionalProperties: false
      properties:
        path:
          $ref: '#/components/schemas/Path'
        value:
          $ref: '#/components/schemas/StringValue'
      required:
        - path
        - value
      title: EnvProperties
    Env:
      type: object
      description: >-
        "Environment variable" target. Set or remove environment variable.
        Environment variables are by design configured in process scope. There
        are mechanisms to configure them for every new process, but it's up to
        OS/shell.
      additionalProperties: false
      properties:
        scope:
          type: object
          description: >-
            Target scope. You can use multiple scopes: machine (applies to all
            users of the computer), user (applies to current user of the
            computer), process (applies to current process only).
          additionalProperties: false
          properties:
            machine:
              $ref: '#/components/schemas/EnvProperties'
              description: Configures telemetry channel for all users of the computer.
            user:
              $ref: '#/components/schemas/EnvProperties'
              description: Configures telemetry channel for current user of the computer.
            process:
              $ref: '#/components/schemas/EnvProperties'
              description: Configures telemetry channel for process only.
          anyOf:
            - required:
                - machine
            - required:
                - process
            - required:
                - user
      required:
        - scope
      title: Env
    PlainFileProperties:
      type: object
      description: Describes file path, selector for target property and values.
      additionalProperties: false
      properties:
        path:
          $ref: '#/components/schemas/Path'
        selector:
          type: string
        value:
          $ref: '#/components/schemas/StringValue'
        display_value:
          type: string
      required:
        - display_value
        - path
        - selector
        - value
      title: PlainFileProperties
    PlainFile:
      type: object
      description: '"Plaintext file". Modify plaintext file.'
      additionalProperties: false
      properties:
        scope:
          type: object
          description: >-
            Target scope. You can use multiple scopes: machine (applies to all
            users of the computer), user (applies to current user of the
            computer), process (applies to current process only).
          additionalProperties: false
          properties:
            machine:
              $ref: '#/components/schemas/PlainFileProperties'
              description: Configures telemetry channel for all users of the computer.
            user:
              $ref: '#/components/schemas/PlainFileProperties'
              description: Configures telemetry channel for current user of the computer.
            process:
              $ref: '#/components/schemas/PlainFileProperties'
              description: Configures telemetry channel for process only.
          anyOf:
            - required:
                - machine
            - required:
                - process
            - required:
                - user
      required:
        - scope
      title: PlainFile
    RichValue:
      type: object
      description: >-
        Opt-in/out values for JSON and other targets that can use non-string
        values (e.g.: number/boolean)
      additionalProperties: false
      properties:
        opt_out:
          description: >-
            This value will opt-OUT of the telemetry collection. Use null to
            indicate that the entire key holding this value should be removed.
          oneOf:
            - type: number
            - type: string
            - type: boolean
            - type: 'null'
        opt_in:
          description: >-
            This value will opt-IN to the telemetry collection. Use null to
            indicate that value should be removed.
          oneOf:
            - type: number
            - type: string
            - type: boolean
            - type: 'null'
      required:
        - opt_in
        - opt_out
      title: RichValue
    JSONFileProperties:
      type: object
      description: Describes file path, selector for target property and values.
      additionalProperties: false
      properties:
        path:
          $ref: '#/components/schemas/Path'
        selector:
          type: string
        value:
          $ref: '#/components/schemas/RichValue'
        display_value:
          type: string
      required:
        - display_value
        - path
        - selector
        - value
      title: JSONFileProperties
    JSONFile:
      type: object
      description: '"JSON file". Modify JSON file.'
      additionalProperties: false
      properties:
        scope:
          type: object
          description: >-
            Target scope. You can use multiple scopes: machine (applies to all
            users of the computer), user (applies to current user of the
            computer), process (applies to current process only).
          additionalProperties: false
          properties:
            machine:
              $ref: '#/components/schemas/JSONFileProperties'
              description: Configures telemetry channel for all users of the computer.
            user:
              $ref: '#/components/schemas/JSONFileProperties'
              description: Configures telemetry channel for current user of the computer.
            process:
              $ref: '#/components/schemas/JSONFileProperties'
              description: Configures telemetry channel for process only.
          anyOf:
            - required:
                - machine
            - required:
                - process
            - required:
                - user
      required:
        - scope
      title: JSONFile
    RegistryProperties:
      type: object
      description: Describes registry path and keys/values.
      additionalProperties: false
      properties:
        root:
          type: string
          description: >-
            Registry hive name:
            https://docs.microsoft.com/en-us/windows/win32/sysinfo/predefined-keys
          enum:
            - HKEY_CLASSES_ROOT
            - HKEY_CURRENT_CONFIG
            - HKEY_CURRENT_USER
            - HKEY_CURRENT_USER_LOCAL_SETTINGS
            - HKEY_LOCAL_MACHINE
            - HKEY_PERFORMANCE_DATA
            - HKEY_PERFORMANCE_NLSTEXT
            - HKEY_PERFORMANCE_TEXT
            - HKEY_USERS
        path:
          type: string
          description: Registry key path.
          pattern: ^(?!\\).+?(?<!\\)$
        key:
          type: string
          description: Registry key name.
        type:
          type: string
          description: Registry key type.
          enum:
            - REG_SZ
            - REG_EXPAND_SZ
            - REG_MULTI_SZ
            - REG_DWORD_BIG_ENDIAN
            - REG_DWORD
            - REG_QWORD
            - REG_BINARY
        value:
          $ref: '#/components/schemas/StringValue'
      required:
        - root
        - path
        - key
        - type
        - value
      title: RegistryProperties
    Registry:
      type: object
      additionalProperties: false
      description: '"Windows registry". Modify keys/values in Windows registry.'
      properties:
        scope:
          type: object
          description: >-
            Target scope. You can use multiple scopes: machine (applies to all
            users of the computer), user (applies to current user of the
            computer), process (applies to current process only).
          additionalProperties: false
          properties:
            machine:
              $ref: '#/components/schemas/RegistryProperties'
              description: Configures telemetry channel for all users of the computer.
            user:
              $ref: '#/components/schemas/RegistryProperties'
              description: Configures telemetry channel for current user of the computer.
            process:
              $ref: '#/components/schemas/RegistryProperties'
              description: Configures telemetry channel for process only.
          anyOf:
            - required:
                - machine
            - required:
                - process
            - required:
                - user
      required:
        - scope
      title: Registry
    Noop:
      type: object
      description: >-
        "No operation". Use this for links to third-party telemetry
        configuration tools, that are not supported by this schema.
      additionalProperties: false
      properties:
        name:
          type: string
          pattern: ^[\S]+(\s+[\S]+)*$
          description: Friendly name. No leading/trailing whitespace allowed.
        link:
          type: string
          format: uri
          pattern: ^http[s]?:\/\/.+$
          description: 'Link to website. Example: https://example.com.'
        description:
          type: string
          pattern: ^[\S]+(\s+[\S]+)*$
          description: Friendly description. No leading/trailing whitespace allowed.
      required:
        - description
        - link
        - name
      title: Noop
    Target:
      type: object
      description: >-
        Describes telemetry channel configuration options. Optional, since you
        may wish to describe telemetry channels that don't provide a ways to
        control them.
      additionalProperties: false
      properties:
        exec:
          $ref: '#/components/schemas/Exec'
        env:
          $ref: '#/components/schemas/Env'
        plain_file:
          $ref: '#/components/schemas/PlainFile'
        json_file:
          $ref: '#/components/schemas/JSONFile'
        registry:
          $ref: '#/components/schemas/Registry'
        noop:
          type: array
          items:
            $ref: '#/components/schemas/Noop'
      anyOf:
        - required:
            - exec
        - required:
            - env
        - required:
            - plain_file
        - required:
            - json_file
        - required:
            - registry
        - required:
            - noop
      title: Target
    Telemetry:
      type: object
      description: Describes single telemetry channel (version check, analytics, etc..).
      additionalProperties: false
      properties:
        id:
          type: string
          pattern: ^[a-z0-9-]+$
          description: >-
            Telemetry channel unique ID. Use [a-z0-9-] character set. Must be
            unique in this array. Example: usage-data.
        name:
          type: string
          pattern: ^[\S]+(\s+[\S]+)*$
          description: >-
            Friendly name of the channel. No leading/trailing whitespace
            allowed. Example: Usage data.
        traits:
          $ref: '#/components/schemas/Traits'
        description:
          type: string
          pattern: ^[\S]+(\s+[\S]+)*$
          description: 'Optional description. Example: Disable usage data reporting.'
        links:
          $ref: '#/components/schemas/Links'
        target:
          $ref: '#/components/schemas/Target'
      required:
        - id
        - name
        - traits
      title: Telemetry
    Toptout:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          pattern: ^[a-z0-9-]+$
          description: >-
            Product unique ID. Use [a-z0-9-] character set. Must be unique
            across all files. Example: foo-bar.
        name:
          type: string
          pattern: ^[\S]+(\s+[\S]+)*$
          description: >-
            Friendly name of the product. No leading/trailing whitespace
            allowed. Example: Foo Bar.
        executable_name:
          type: array
          description: >-
            Optional. Provide executable name(s) if presence of this product can
            be detected by PATH environment variable lookup. No leading/trailing
            whitespace allowed.
          items:
            type: string
            pattern: ^[\S]+(\s+[\S]+)*$
        description:
          type: string
          pattern: ^[\S]+(\s+[\S]+)*$
          description: >-
            Short description of the collected telemetry. Usually copied from
            the product's documentation. No leading/trailing whitespace allowed.
        category_id:
          type: string
          pattern: ^[a-z0-9-]+$
          description: >-
            Unique category id. Use [a-z0-9-] character set. The API generator
            uses it to group products. Example: development.
        category_name:
          type: string
          pattern: ^[\S]+(\s+[\S]+)*$
          description: >-
            Friendly category name. The README generator uses it to group
            products. No leading/trailing whitespace allowed. Example:
            Development.
        links:
          $ref: '#/components/schemas/Links'
        telemetry:
          type: array
          description: >-
            Telemetry channels list. Contains name and optionally description
            and opt-in/out methods. Optional, since you may wish to add a
            product that contains telemetry but doesn't provide a way to control
            it.
          items:
            $ref: '#/components/schemas/Telemetry'
      required:
        - description
        - category_id
        - category_name
        - id
        - links
        - name
      title: Toptout
